services:
  discord:
    build:
      context: .
      dockerfile: discord/Dockerfile
    volumes:
      - ./discord:/app
      - ./db:/app/db
    env_file:
      - ./envs/discord.env
      - ./envs/db.env
      - ./envs/sentry.env
    restart: always
    depends_on:
      db:
        condition: service_healthy
    networks:
      - db

  db:
    image: postgres:17.0
    env_file:
      - ./envs/db.env
    environment:
      POSTGRES_DB: main
    volumes:
      - pg_data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: pg_isready -U postgres
      interval: 2s
      timeout: 5s
      retries: 30
    networks:
      - db

  db-migrator:
    build:
      context: .
      dockerfile: ./db/Dockerfile
    tty: true
    volumes:
      - ./db:/app
    env_file:
      - ./envs/db.env
    depends_on:
      db:
        condition: service_healthy
    networks:
      - db

volumes:
  pg_data:

networks:
  db:
    driver: bridge
